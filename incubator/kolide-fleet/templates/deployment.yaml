---
apiVersion: "extensions/v1beta1"
kind: "Deployment"
metadata:
  labels:
    app: {{ template "fleet.name" . }}
    chart: {{ template "fleet.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ template "fleet.fullname" . }}
spec:
  replicas: {{ default 2 .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ template "fleet.fullname" . }}
      release: "{{ .Release.Name }}"
  strategy:
    type: "Recreate"
  template:
    metadata:
      annotations:
{{- if .Values.pod.annotations }}
{{ toYaml .Values.pod.annotations | indent 8 }}
{{ end }}
        checksum.helm.kubernetes.io/secret: {{ include (print $.Chart.Name "/templates/secret.yaml") . | sha256sum }}
        checksum.helm.kubernetes.io/configmap: {{ include (print $.Chart.Name "/templates/configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "fleet.fullname" . }}
        release: "{{ .Release.Name }}"
    spec:
      volumes:
          # The name comes from the configmap. It's also shown earlier
        - name: "fleet-configuration"
          configMap:
            name: {{ template "fleet.fullname" . }}
        - name: "fleet-tls"
          secret:
            secretName: {{ template "fleet.fullname" . }}-tls
      containers:
        - name: fleet
          env: 
            - name: "KOLIDE_AUTH_JWT_KEY"
              valueFrom:
                secretKeyRef:
                  name: {{ template "fleet.fullname" . }}
                  key: "fleet.auth.jwt_key"
            - name: "KOLIDE_MYSQL_USERNAME"
              valueFrom:
                secretKeyRef:
                  name: {{ template "fleet.fullname" . }}
                  key: "fleet.mysql.username"
            - name: "KOLIDE_MYSQL_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "fleet.fullname" . }}
                  key: "fleet.mysql.password"
            - name: "KOLIDE_REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ template "fleet.fullname" . }}
                  key: "fleet.redis.password"
          image: {{ .Values.pod.fleet.image | quote }}
          args:
            - "fleet"
            - "serve"
            - "--config"
            - "/etc/fleet/config.yml"
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            - containerPort: 8080
              protocol: "TCP"
              name: "http"
          volumeMounts:
            - name: "fleet-configuration"
              readOnly: true
              mountPath: "/etc/fleet"
            - name: "fleet-tls"
              readOnly: true
              mountPath: "/etc/pki/fleet"
          livenessProbe:
            httpGet:
              path: /healthz
              port: "http"
              scheme: "HTTPS"
              periodSeconds: 10
              initialDelaySeconds: 5
              timeoutSeconds: 1
              failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: "http"
              scheme: "HTTPS"
              periodSeconds: 10
              initialDelaySeconds: 5
              timeoutSeconds: 1
              failureThreshold: 3
      restartPolicy: "Always"
